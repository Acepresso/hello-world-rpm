# Copyright The Conforma Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
name: Release

"on":
  workflow_run:
    workflows: [Checks]
    types: [completed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  info:
    name: Info
    runs-on: ubuntu-latest
    outputs:
      head_sha: ${{ steps.head_sha.outputs.head_sha }}
      timestamp: ${{ steps.timestamp.outputs.timestamp }}

    steps:
      - name: Git Info
        id: head_sha
        env:
          GH_TOKEN: ${{ github.token }}
          GH_COBRA: 1
        run: |
          echo head_sha=$(gh api /repos/conforma/cli/git/matching-refs/heads/main --jq '.[0].object.sha') | tee -a "$GITHUB_OUTPUT"
      - name: Timestamp
        id: timestamp
        run: |
          echo timestamp=$(date '+%s') | tee -a "$GITHUB_OUTPUT"

  release:

    permissions:
      contents: write  # for Git to git push & cache write
      pages: write     # Needed for GitHub Pages deployment
      id-token: write  # Needed for GitHub Pages deployment
    name: Release
    runs-on: ubuntu-latest
    needs: info
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_sha == needs.info.outputs.head_sha) || github.event_name == 'workflow_dispatch' }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Delete snapshot release and tag
        id: add_tags
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          RELEASE_ID=$(gh api \
            -H 'Accept: application/vnd.github.v3+json' \
            /repos/${{ github.repository }}/releases \
            -q '.[] | select(.tag_name == "snapshot") | .id')

          [[ -n "${RELEASE_ID}" ]] && gh api --method DELETE \
            -H 'Accept: application/vnd.github.v3+json' \
            "/repos/${{ github.repository }}/releases/${RELEASE_ID}"

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a -f -m 'Development snapshot' snapshot

          source hack/add-auto-tag.sh
          echo "tag_name=$( source hack/derive-version.sh )" | tee -a "$GITHUB_OUTPUT"

          git push -f --tags

      - name: Rolling release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2
        with:
          make_latest: true
          name: Rolling release
          body: Stable rolling release, currently the same as `${{ steps.add_tags.outputs.tag_name }}`.
          tag_name: snapshot
          generate_release_notes: false
          files: dist/*

      - name: Versioned release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2
        with:
          make_latest: false
          name: ${{ steps.add_tags.outputs.tag_name }}
          tag_name: ${{ steps.add_tags.outputs.tag_name }}
          generate_release_notes: false
          files: dist/*
